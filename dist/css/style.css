.container {
    display: grid;
    grid-template-areas:
        "header header header"
        "nav content content"
        "footer footer footer";
    grid-template-columns: 200px 1fr 200px;
    grid-template-rows: auto 1fr auto;
    grid-gap: 10px;
    height: 98vh;
}

header {
    grid-area: header;
}

nav {
    grid-area: nav;
    border-style: groove;
}

main {
    grid-area: content;
    border-style: groove;
}

footer {
    grid-area: footer;
}

.entity-display {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%;
}

.json-display {
    height: 100%;
    display: flex;
    flex-direction: column;
}

.json-display .json-content {
    width: 99%;
    /* height: 75vh; */
    height: 100%;
    margin: 3px;
    overflow: auto;
}

.entity-summary {
    padding: 2px;
    display: flex;
    flex-direction: column;
}

.entity-summary dt { 
    float: left; 
    clear: left; 
    width: 1em; 
    font-weight: bold; 
}
.entity-summary dd { 
    float: left; 
}

.json-display .control {
    padding: 3px;
}

.data-grid {
    /* width: 100%; */
    height: 91vh;
    overflow: scroll;
    padding: 10px;
}

.data-grid table {
    border-collapse: collapse;
    border-spacing: 0;
    width: 100%;
    border: 1px solid #ddd;
}

.data-grid th, td {
    text-align: left;
    padding: 10px;
  }
  
.data-grid tr:nth-child(even) {
    background-color: #d6d4d4;
}

.data-grid tr {
    border: 1px solid black;
    cursor: pointer;
}


/*Modal*/
 /* The Modal (background) */
 .modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
  }
  
  /* Modal Content/Box */
  .modal-content {
    background-color: #fefefe;
    margin: 15% auto; /* 15% from the top and centered */
    padding: 20px;
    border: 1px solid #888;
    width: 80%; /* Could be more or less, depending on screen size */
  }
  
  /* The Close Button */
  .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
  }
  
  .close:hover,
  .close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
  } 



  .loading-mask {
    position: relative;
  }
  
  /*
  Because we set .loading-mask relative, we can span our ::before  
  element over the whole parent element  
  */
  .loading-mask::before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: rgba(0, 0, 0, 0.25);
  }
  
  /*
  Spin animation for .loading-mask::after  
  */
  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(359deg);
    }
  }
  
  /*
  The loading throbber is a single spinning element with three  
  visible borders and a border-radius of 50%.  
  Instead of a border we could also use a font-icon or any  
  image using the content attribute.  
  */
  .loading-mask::after {
    content: "";
    position: absolute;
    border-width: 3px;
    border-style: solid;
    border-color: transparent rgb(255, 255, 255) rgb(255, 255, 255);
    border-radius: 50%;
    width: 24px;
    height: 24px;
    top: calc(50% - 12px);
    left: calc(50% - 12px);
    animation: 2s linear 0s normal none infinite running spin;
    filter: drop-shadow(0 0 2 rgba(0, 0, 0, 0.33));
  }
